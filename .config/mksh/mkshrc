# $Id$
# $MirOS: src/bin/mksh/dot.mkshrc,v 1.128 2020/04/13 18:39:03 tg Exp $
#-
# Copyright (c) 2002, 2003, 2004, 2006, 2007, 2008, 2009, 2010,
#		2011, 2012, 2013, 2014, 2015, 2016, 2017, 2019,
#		2020
#	mirabilos <m@mirbsd.org>
#
# Provided that these terms and disclaimer and all copyright notices
# are retained or reproduced in an accompanying document, permission
# is granted to deal in this work without restriction, including un-
# limited rights to use, publicly perform, distribute, sell, modify,
# merge, give away, or sublicence.
#
# This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
# the utmost extent permitted by applicable law, neither express nor
# implied; without malicious intent or gross negligence. In no event
# may a licensor, author or contributor be held liable for indirect,
# direct, other damage, loss, or other issues arising in any way out
# of dealing in the work, even if advised of the possibility of such
# damage or existence of a defect, except proven that it results out
# of said person's immediate fault when using the work as intended.
#-
# ${ENV:-~/.mkshrc}: mksh initialisation file for interactive shells

# catch non-mksh, non-lksh, trying to run this file
case ${KSH_VERSION:-} in
*LEGACY\ KSH*|*MIRBSD\ KSH*) ;;
*) \return 0 ;;
esac

# give MidnightBSD's laffer1 a bit of csh feeling
function setenv {
	if (( $# )); then
		\\builtin eval '\\builtin export "$1"="${2:-}"'
	else
		\\builtin typeset -x
	fi
}

# customise your favourite editor here; the first one found is used
for EDITOR in "${EDITOR:-}" jupp jstar mcedit ed vi; do
	EDITOR=$(\\builtin whence -p "$EDITOR") || EDITOR=
	[[ -n $EDITOR && -x $EDITOR ]] && break
	EDITOR=
done

\\builtin alias ls=ls l='ls -F' la='l -a' ll='l -l' lo='l -alo'
\: "${EDITOR:=/bin/ed}${TERM:=vt100}${USER:=$(\\builtin ulimit -c 0; id -un \
    2>/dev/null)}${HOSTNAME:=$(\\builtin ulimit -c 0; hostname 2>/dev/null)}"
[[ $HOSTNAME = ?(?(ip6-)localhost?(6)) ]] && HOSTNAME=nil; \\builtin unalias ls
\\builtin export EDITOR HOSTNAME TERM USER="${USER:-?}"

# Reload variables if root
[ $USER = "root" ] && source $HOME/.profile
# Source some aliases.
source $XDG_CONFIG_HOME/shell/aliasrc
# Source colors for ls command.
source $XDG_CONFIG_HOME/shell/ls_colorsrc
# Nice fzf keybinds
source $XDG_DATA_HOME/mksh/key-bindings.mksh

# History setting
HISTFILE=$XDG_CACHE_HOME/mksh/history
HISTSIZE=65535

# Bind keys.
bind '^L'=clear-screen
bind '^V'=edit-line
#bind -m '^L'='^Cclear^J'
bind -m '^A'='sxiv *^J'
bind -m '^O'='lfcd^J'

UID=$(id -u)
case $UID in
        0) PS1S='# ';;
esac
PS1S=${PS1S:-'$ '}

function dirs {
        local d=${PWD##*/}
        case $d in
                $USER) d="~" ;;
                "") d="/" ;;
        esac
        print -nr -- "$d"
}

# Single line prompt
PS1=$'\a\e[1;34m\a[ ${USER}\a\e[m\a@${HOSTNAME%%.*} \a\e[33m\a$(dirs) \a\e[1;34m\a] \a\e[m\a$PS1S'

# change the title of terminals
tty=$(tty)
tty=${tty##*/}
TTY=${TTY:-$tty}
ILS='\033]1;'; ILE='\007'
WLS='\033]2;'; WLE='\007'

# do we want window decorations?
if [[ -n $ILS ]]; then
	function ilabel { print -n "${ILS}$*${ILE}">/dev/tty; }
	function label { print -n "${WLS}$*${WLE}">/dev/tty; }

	alias stripe='label "$USER@$HOSTNAME ($tty) - $PWD"'
	alias istripe='ilabel "$USER@$HOSTNAME ($tty)"'

	# Run stuff through this to preserve the exit code
	function _ignore { local rc=$?; "$@"; return $rc; }

	function wftp { ilabel "ftp $*"; "ftp" "$@"; _ignore eval istripe; }

	function wcd     { \cd "$@";     _ignore eval stripe; }

	function wssh    { \ssh "$@";    _ignore eval 'istripe; stripe'; }
	function wtelnet { \telnet "$@"; _ignore eval 'istripe; stripe'; }
	function wsu     { \su "$@";     _ignore eval 'istripe; stripe'; }

	alias su=wsu
	alias cd=wcd
	alias ftp=wftp
	alias ssh=wssh
	alias telnet=wtelnet
	eval stripe
	eval istripe
fi

# Image previews in lf.
function lf {
	LF_TEMPDIR="$(mktemp -d -t lf-tempdir-XXXXXX)"
	LF_TEMPDIR="$LF_TEMPDIR" lf-run -last-dir-path="$LF_TEMPDIR/lastdir" "$@"
	if [[ "$(cat "$LF_TEMPDIR/cdtolastdir" 2>/dev/null)" -eq 1 ]]; then
		cd "$(cat "$LF_TEMPDIR/lastdir")"
	fi
	/bin/rm -r "$LF_TEMPDIR"
	unset LF_TEMPDIR
}

# Change working dir in shell to last dir in lf on exit.
function lfcd {
    tmp="$(mktemp)"
    lf -single -last-dir-path="$tmp" "$@"
    if [ -f "$tmp" ]; then
        dir="$(cat "$tmp")"
        /bin/rm -f "$tmp"
        if [ -d "$dir" ]; then
            if [ "$dir" != "$(pwd)" ]; then
                cd "$dir"
            fi
        fi
    fi
}

# mksh-specific from here
\: "${MKSH:=$(\\builtin whence -p mksh)}${MKSH:=/bin/mksh}"
\\builtin export MKSH

# utilities
\\builtin alias doch='doas mksh -c "$(\\builtin fc -ln -1)"'
\\builtin command -v rot13 >/dev/null || \\builtin alias rot13='tr \
    abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ \
    nopqrstuvwxyzabcdefghijklmNOPQRSTUVWXYZABCDEFGHIJKLM'
if \\builtin command -v hd >/dev/null; then
	\:
elif \\builtin command -v hexdump >/dev/null; then
	function hd {
		hexdump -e '"%08.8_ax  " 8/1 "%02X " " - " 8/1 "%02X "' \
		    -e '"  |" "%_p"' -e '"|\n"' "$@"
	}
else
	function hd {
		\\builtin cat "$@" | hd_mksh
	}
fi

# NUL-safe and EBCDIC-safe hexdump (from stdin)
function hd_mksh {
	\\builtin typeset -Uui16 -Z11 pos=0
	\\builtin typeset -Uui16 -Z5 hv=2147483647
	\\builtin typeset dasc dn line i
	\\builtin set +U

	while \\builtin read -arn 512 line; do
		\\builtin typeset -i1 'line[*]'
		i=0
		while (( i < ${#line[*]} )); do
			dn=
			(( (hv = line[i++]) != 0 )) && dn=${line[i-1]#1#}
			if (( (pos & 15) == 0 )); then
				(( pos )) && \
				    \\builtin print -r -- "$dasc|"
				\\builtin print -nr "${pos#16#}  "
				dasc=' |'
			fi
			\\builtin print -nr "${hv#16#} "
			if [[ $dn = [[:print:]] ]]; then
				dasc+=$dn
			else
				dasc+=.
			fi
			(( (pos++ & 15) == 7 )) && \
			    \\builtin print -nr -- '- '
		done
	done
	while (( pos & 15 )); do
		\\builtin print -nr '   '
		(( (pos++ & 15) == 7 )) && \
		    \\builtin print -nr -- '- '
	done
	(( hv == 2147483647 )) || \\builtin print -r -- "$dasc|"
}

function which {
	\\builtin typeset p x c
	\\builtin typeset -i a=0 rv=2 e
	\\builtin set +e
	\\builtin set -o noglob

	while \\builtin getopts "a" x; do
		case $x {
		(a)	a=1 ;;
		(+a)	a=0 ;;
		(*)	\\builtin print -ru2 'Usage: which [-a] name [...]'
			\\builtin return 255 ;;
		}
	done
	\\builtin shift $((OPTIND - 1))

	#        vvvvvvvvvvvvvvvvvvvv should be def_path
	p=${PATH-/usr/bin$PATHSEP/bin}
	#       ^ no colon!

	# trailing PATHSEP vs field splitting
	[[ $p = *"$PATHSEP" ]] && p+=.

	IFS=$PATHSEP
	\\builtin set -A p -- ${p:-.}
	IFS=$' \t\n'

	for x in "$@"; do
		if (( !a )) || [[ $x = */* ]]; then
			\\builtin whence -p -- "$x"
			e=$?
		else
			e=1
			for c in "${p[@]}"; do
				PATH=${c:-.} \\builtin whence -p -- "$x" && e=0
			done
		fi
		(( rv = (e == 0) ? (rv & ~2) : (rv == 2 ? 2 : 1) ))
	done
	\\builtin return $rv
}

# vim: filetype=sh
