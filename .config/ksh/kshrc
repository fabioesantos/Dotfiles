#	$OpenBSD: kshrc,v 1.32 2018/05/16 14:01:41 mpf Exp $
#
# NAME:
#	kshrc - user initialization file for ksh
#
# DESCRIPTION:
#	Each invocation of /bin/ksh processes the file pointed
#	to by $ENV (usually $HOME/.kshrc).
#
#
# Source aditional files
[ $USER = "root" ] && . $HOME/.profile
[ -f "$XDG_CONFIG_HOME/shell/aliasrc" ] && . $XDG_CONFIG_HOME/shell/aliasrc
[ -f "$XDG_CONFIG_HOME/shell/ls_colorsrc" ] && . $XDG_CONFIG_HOME/shell/ls_colorsrc
[ -f "$XDG_CONFIG_HOME/lf/icons" ] && . $XDG_CONFIG_HOME/lf/icons
[ -f "$XDG_DATA_HOME/ksh/completions" ] && . $XDG_DATA_HOME/ksh/completions

# Transparency for xterm window
[ -n "$XTERM_VERSION" ] && transset --id "$WINDOWID" 0.85 >/dev/null

# Enable vi mode
set -o emacs

# Bind keys
bind '^[[A'=up-history
bind '^[[B'=down-history
bind '^[[C'=forward-char
bind '^[[D'=backward-char
bind -m '^A'='nsxiv *^J'
bind -m '^O'='lfcd^J'
#bind -m '^L'='clear^J'

UID=$(id -u)
case $UID in
        0) PS1S='# ';;
esac
PS1S=${PS1S:-'$ '}

# Set prompt
PS1="\033[1;34m[ \u\033[m@\H \033[0;33m\W \033[1;34m] \033[m$PS1S"

# Set prompt (multiline)
#PS1="\033[1;34m┌─| \u\033[m@\H \033[1;34m|──| \033[0;33m\w \033[1;34m|\n└─| \033[0m$PS1S\033[1;34m|─>> \033[m"

# History settings.
HISTFILE="$XDG_CACHE_HOME/ksh/history"
HISTSIZE=2000
HISTCONTROL=ignoredups:ignorespace

# Image previews in lf.
function lf {
	LF_TEMPDIR="$(mktemp -d -t lf-tempdir-XXXXXX)"
	LF_TEMPDIR="$LF_TEMPDIR" lf-run -last-dir-path="$LF_TEMPDIR/lastdir" "$@"
	if [[ "$(cat "$LF_TEMPDIR/cdtolastdir" 2>/dev/null)" -eq 1 ]]; then
		cd "$(cat "$LF_TEMPDIR/lastdir")"
	fi
	/bin/rm -r "$LF_TEMPDIR"
	unset LF_TEMPDIR
}

# Change working dir in shell to last dir in lf on exit.
function lfcd {
    tmp="$(mktemp)"
    lf -single -last-dir-path="$tmp" "$@"
    if [ -f "$tmp" ]; then
        dir="$(cat "$tmp")"
        /bin/rm -f "$tmp"
        if [ -d "$dir" ]; then
            if [ "$dir" != "$(pwd)" ]; then
                cd "$dir"
            fi
        fi
    fi
}

# change the title of terminals
ILS='\033]1;'; ILE='\007'
WLS='\033]2;'; WLE='\007'

function pwd_ {
    local d=${PWD}
    case $d in
        $HOME) d="~" ;;
        $HOME/*) d="$(echo $d | sed 's/\/home\/fabiosantos/~/')" ;;
    esac
    print -nr -- "$d"
}

# do we want window decorations?
if [[ -n $ILS ]]; then
	function ilabel { print -n "${ILS}$*${ILE}">/dev/tty; }
	function label { print -n "${WLS}$*${WLE}">/dev/tty; }

        alias stripe='label "$USER@$HOSTNAME: $(pwd_)"'
	alias istripe='ilabel "$USER@$HOSTNAME"'

	# Run stuff through this to preserve the exit code
	function _ignore { local rc=$?; "$@"; return $rc; }

	function wftp { ilabel "ftp $*"; "ftp" "$@"; _ignore eval istripe; }

	function wcd     { \cd "$@";     _ignore eval stripe; }

	function wssh    { \ssh "$@";    _ignore eval 'istripe; stripe'; }
	function wtelnet { \telnet "$@"; _ignore eval 'istripe; stripe'; }
	function wsu     { \su "$@";     _ignore eval 'istripe; stripe'; }

	alias su=wsu
	alias cd=wcd
	alias ftp=wftp
	alias ssh=wssh
	alias telnet=wtelnet
	eval stripe
	eval istripe
fi

# vim: filetype=sh
